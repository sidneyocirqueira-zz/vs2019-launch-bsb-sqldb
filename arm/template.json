{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "administratorLogin": {
            "type": "String"
        },
        "administratorLoginPassword": {
            "type": "SecureString"
        },
        "collation": {
            "type": "String"
        },
        "databaseName": {
            "type": "String"
        },
        "tier": {
            "type": "String"
        },
        "skuName": {
            "type": "String"
        },
        "location": {
            "type": "String"
        },
        "maxSizeBytes": {
            "type": "Int"
        },
        "serverName": {
            "type": "String"
        },
        "sampleName": {
            "defaultValue": "",
            "type": "String"
        },
        "zoneRedundant": {
            "defaultValue": false,
            "type": "Bool"
        },
        "licenseType": {
            "defaultValue": "",
            "type": "String"
        },
        "readScaleOut": {
            "defaultValue": "Disabled",
            "type": "String"
        },
        "numberOfReplicas": {
            "defaultValue": 0,
            "type": "Int"
        },
        "enableATP": {
            "defaultValue": false,
            "type": "Bool"
        },
        "allowAzureIps": {
            "defaultValue": true,
            "type": "Bool"
        },
        "databaseTags": {
            "defaultValue": {},
            "type": "Object"
        },
        "serverTags": {
            "defaultValue": {},
            "type": "Object"
        }
    },
    "variables": {
        "subscriptionId": "[subscription().subscriptionId]",
        "resourceGroupName": "[resourceGroup().name]",
        "uniqueStorage": "[uniqueString(variables('subscriptionId'), variables('resourceGroupName'), parameters('location'))]",
        "storageName": "[tolower(concat('sqlva', variables('uniqueStorage')))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "name": "[variables('storageName')]",
            "apiVersion": "2016-01-01",
            "location": "[parameters('location')]",
            "properties": {},
            "condition": "[parameters('enableATP')]"
        },
        {
            "type": "Microsoft.Sql/servers",
            "name": "[parameters('serverName')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "tags": "[parameters('serverTags')]",
            "properties": {
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "version": "12.0"
            },
            "resources": [
                {
                    "type": "databases",
                    "sku": {
                        "name": "[parameters('skuName')]",
                        "tier": "[parameters('tier')]"
                    },
                    "name": "[parameters('databaseName')]",
                    "apiVersion": "2017-10-01-preview",
                    "location": "[parameters('location')]",
                    "tags": "[parameters('databaseTags')]",
                    "properties": {
                        "collation": "[parameters('collation')]",
                        "maxSizeBytes": "[parameters('maxSizeBytes')]",
                        "sampleName": "[parameters('sampleName')]",
                        "zoneRedundant": "[parameters('zoneRedundant')]",
                        "licenseType": "[parameters('licenseType')]",
                        "readScale": "[parameters('readScaleOut')]",
                        "readReplicaCount": "[parameters('numberOfReplicas')]"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
                    ]
                },
                {
                    "type": "firewallrules",
                    "name": "AllowAllWindowsAzureIps",
                    "apiVersion": "2014-04-01-preview",
                    "location": "[parameters('location')]",
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
                    ],
                    "condition": "[parameters('allowAzureIps')]"
                },
                {
                    "type": "securityAlertPolicies",
                    "name": "Default",
                    "apiVersion": "2017-03-01-preview",
                    "properties": {
                        "state": "Enabled",
                        "disabledAlerts": [],
                        "emailAddresses": [],
                        "emailAccountAdmins": true
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]",
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/databases/', parameters('databaseName'))]"
                    ],
                    "condition": "[parameters('enableATP')]"
                },
                {
                    "type": "vulnerabilityAssessments",
                    "name": "Default",
                    "apiVersion": "2018-06-01-preview",
                    "properties": {
                        "storageContainerPath": "[if(parameters('enableATP'), concat(reference(variables('storageName'), '2018-02-01').primaryEndpoints.blob, 'vulnerability-assessment'), '')]",
                        "storageAccountAccessKey": "[if(parameters('enableATP'), listKeys(variables('storageName'), '2018-02-01').keys[0].value, '')]",
                        "recurringScans": {
                            "isEnabled": true,
                            "emailSubscriptionAdmins": true,
                            "emails": []
                        }
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]",
                        "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/securityAlertPolicies/Default')]"
                    ],
                    "condition": "[parameters('enableATP')]"
                }
            ]
        }
    ]
}